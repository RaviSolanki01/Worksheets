1. Which of the following extracts information from user generated content?
    B) Web scraping
    
2. Which of the following is not a web scraping library in python?
    C) Requests
    
3. Selenium tests __________?
    A) Browser based applications
    
4. Task of crawling is performed by a complex software which is known as:
    B) Crawler

5. Which of the following commands is used to access name of a tag in Beautiful Soup?
    B) tag.name
    
6. Which of the following is the default parser in Beautiful Soup?
    C) lxml
    
7. In selenium the webdriver is used to?
    C) execute tests on HtmlUnit browser
    
8. In selenium, driver.find_elements_by_xpath(‘given xpath’) returns:
    C) the list of all webelements associated with the ‘given xpath’
    
9. The script ‘window.scrollBy(0,a) scrolls the webpage by?
    D) ‘a’ number of pixels vertically
    
10. Which of the following is(are) tags of HTML?
    A) <a>
    B) <b>
    D) <href>
    
11. What is the main difference between a web scraper and a web crawler?


    *Web scraping* is basically extracting data from websites in an automated manner. 
    It is automated because it uses bots to scrape the information or content from websites. 
    It’s a programmatic analysis of a web page to download information from it.
    Data scraping involves locating data and then extracting it.
    It does not copy and paste but directly fetches the data in a precise and accurate manner.
    It does not limit itself to the web; data can be scraped virtually from anywhere it is stored. 
    It does not have to be from the Internet. It is about data and not where it is stored.
    
    *Web crawling*The term crawling comes from the way a spider would crawl.
    That’s why a web crawler is also sometimes called a spider.
    It’s basically an internet bot that systematically browses (read crawls) the World Wide Web,
    usually for the purpose of web indexing. 
    It is used for indexing the information on the page using bots also known as crawlers.
    It involves looking at a page in its entirety and indexing it,
    including its last letter and dot on the page, in the quest for information. 
    Crawling through every nook and crevice of the World Wide Web, 
    the spider locates and retrieves the information lying in the deeper layers. 
    Web crawlers or bots navigate through heaps of data and information and procure 
    whatever is relevant for your project.
    
12. What is ‘robots.txt’ file? What is the use of ‘robots.txt’ file?
    Robots.txt file is a text file created by the designer to prevent the search engines 
    and bots to crawl up their sites. It contains the list of allowed and disallowed sites 
    and whenever a bot wants to access the website, 
    it checks the robots.txt file and accesses only those sites that are allowed.
    
13. What are static and dynamic web pages?
    Static Web pages:
    Static Web pages are very simple. It is written in languages such as HTML, JavaScript, CSS, etc.
    For static web pages when a server receives a request for a web page, 
    then the server sends the response to the client without doing any additional process. 
    And these web pages are seen through a web browser. In static web pages, 
    Pages will remain the same until someone changes it manually.
    
    Dynamic Web Pages:
    Dynamic Web Pages are written in languages such as CGI, AJAX, ASP, ASP.NET, etc. 
    In dynamic web pages, the Content of pages is different for different visitors. 
    It takes more time to load than the static web page. Dynamic web pages are used 
    where the information is changed frequently, for example, stock prices, weather information, etc.
    
14. Write a python program to check whether a webpage contains a title or not.
    
    ###### Program Start Here  ######
    
    from selenium import webdriver 
 
    browser = webdriver.Chrome() 
    browser.get('https://images.google.com/?gws_rd=ssl') 

    print(browser.title)
    
    ###### Program End Here  ######


15. Write a python program to access the search bar and search button on images.google.com.

    ###### Program Start Here  ######
    
    from selenium import webdriver
    import time

    searchThis = 'Scraping'
    url = 'https://images.google.com/?gws_rd=ssl'
    browser = webdriver.Chrome() 
    browser.get(url) 

    #print(browser.title)

    serachBox = browser.find_element_by_name('q')
    serachBox.clear()
    serachBox.send_keys(searchThis)
    browser.find_element_by_class_name("Tg7LZd").click()

    time.sleep(3)
    browser.close()
    browser.quit()
    
    ###### Program End Here  ######



